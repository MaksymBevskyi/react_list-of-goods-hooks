{"version":3,"sources":["types/SortType.ts","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodList","visibleGoods","map","good","goodsFromServer","App","useState","sortField","setSortField","sortReverse","setSortReverse","goods","preparedGoods","sort","element1","element2","value1","value2","localeCompare","reverse","getPreparedGoods","className","type","classnames","Name","onClick","Length","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,qEAAAA,K,YAAAA,E,iBAAAA,M,sBCOCC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACvC,6BACGA,EAAaC,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCDjBC,EAAyB,CACpC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsCK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAA8B,IAAhE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMT,EAjCR,SACEU,EADF,GAGG,IADCF,EACF,EADEA,YAAaF,EACf,EADeA,UAETK,EAAa,YAAOD,GAmB1B,OAjBIJ,GACFK,EAAcC,MAAK,SAACC,EAAUC,GAC5B,IAAMC,EAASF,EAASP,GAClBU,EAASF,EAASR,GAExB,MAAsB,kBAAXS,GAAyC,kBAAXC,EAChCD,EAASC,EAGI,kBAAXD,GAAyC,kBAAXC,EAChCD,EAAOE,cAAcD,GAGvB,KAIPR,EACKG,EAAcO,UAGhBP,EAOLQ,CAAiBhB,EAAiB,CAAEK,cAAaF,cAEnD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAcR,EAASyB,OAEvCC,QAAS,kBAAMjB,EAAaT,EAASyB,OANvC,iCAWA,wBACEF,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAcR,EAAS2B,SAEvCD,QAAS,kBAAMjB,EAAaT,EAAS2B,SANvC,4BAWA,wBACEJ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAad,IAEjBgB,QAAS,kBAAMf,GAAgBD,IANjC,sBAWEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVI,QAAS,WACPjB,EAAa,IACbE,GAAe,IALnB,sBAaJ,cAAC,EAAD,CAAUT,aAAcA,QC9G9B0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5acd1de7.chunk.js","sourcesContent":["export enum SortType {\n  Name = 'name',\n  Length = 'length',\n}\n","import React from 'react';\nimport { Goods } from '../../types/Goods';\n\ntype Props = {\n  visibleGoods: Goods;\n};\n\nexport const GoodList: React.FC<Props> = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map((good) => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport 'bulma/css/bulma.css';\n\nimport { Goods } from './types/Goods';\nimport { SortType } from './types/SortType';\nimport './App.scss';\nimport { GoodList } from './components/GoodsList/GoodsList';\n\nexport const goodsFromServer: Goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface SortParams<T> {\n  sortReverse: boolean;\n  sortField: keyof T | '';\n}\n\nfunction getPreparedGoods<T>(\n  goods: T[],\n  { sortReverse, sortField }: SortParams<T>,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((element1, element2) => {\n      const value1 = element1[sortField];\n      const value2 = element2[sortField];\n\n      if (typeof value1 === 'number' && typeof value2 === 'number') {\n        return value1 - value2;\n      }\n\n      if (typeof value1 === 'string' && typeof value2 === 'string') {\n        return value1.localeCompare(value2);\n      }\n\n      return 0;\n    });\n  }\n\n  if (sortReverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<keyof SortType | ''>('');\n  const [sortReverse, setSortReverse] = useState(false);\n  const visibleGoods\n  = getPreparedGoods(goodsFromServer, { sortReverse, sortField });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-info',\n            { 'is-light': sortField !== SortType.Name as keyof SortType },\n          )}\n          onClick={() => setSortField(SortType.Name as keyof SortType)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-success',\n            { 'is-light': sortField !== SortType.Length },\n          )}\n          onClick={() => setSortField(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-warning',\n            { 'is-light': !sortReverse },\n          )}\n          onClick={() => setSortReverse(!sortReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || sortReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setSortReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList visibleGoods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}