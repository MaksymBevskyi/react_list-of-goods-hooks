{"version":3,"sources":["components/GoodsList/GoodsList.tsx","constans.js","App.tsx","index.tsx"],"names":["GoodList","visibleGoods","map","good","SORT_FIELD","goodsFromServer","App","useState","sortField","setSortField","isReverse","setIsReverse","goods","sortReverse","preparedGoods","sort","element1","element2","length","localeCompare","reverse","getPreparedGoods","className","type","classnames","onClick","prev","ReactDOM","render","document","getElementById"],"mappings":"iPAOaA,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACvC,6BACGA,EAAaC,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCVjBC,EACL,OADKA,EAEH,SCOGC,G,MAAyB,CACpC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAiCK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAkB,GAApD,mBAAOG,EAAP,KAAkBC,EAAlB,KACMV,EA7BR,SACEW,EADF,GAGG,IADCC,EACF,EADEA,YAAaL,EACf,EADeA,UAEXM,EAAa,YAAOF,GAexB,OAbIJ,IACFM,EAAgBA,EAAcC,MAAK,SAACC,EAAUC,GAC5C,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAASE,OAASD,EAASC,OACpC,KAAKd,EACH,OAAOY,EAASG,cAAcF,GAChC,QACE,OAAO,OAKXJ,EACKC,EAAcM,UAGhBN,EAOLO,CAAiBhB,EAAiB,CAAEQ,YAAaH,EAAWF,cAe9D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,kBAAMhB,EAAaL,IAN9B,iCAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAxBwB,WAC9BhB,EAAaL,IAiBT,4BAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAad,IAEjBe,QAvCmB,WACzBd,GAAa,SAAAe,GAAI,OAAKA,MAgClB,sBAWElB,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QArDI,WACZhB,EAAa,IACbE,GAAa,IAgDP,sBAUJ,cAAC,EAAD,CAAUV,aAAcA,QCnH9B0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.14481dd4.chunk.js","sourcesContent":["import React from 'react';\nimport { Goods } from '../../types/Goods';\n\ntype Props = {\n  visibleGoods: Goods;\n};\n\nexport const GoodList: React.FC<Props> = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map((good) => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","export const SORT_FIELD = {\n  NAME: 'name',\n  LENGTH: 'length',\n};\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport 'bulma/css/bulma.css';\n\nimport { Goods } from './types/Goods';\nimport { GoodList } from './components/GoodsList/GoodsList';\nimport { SORT_FIELD } from './constans';\nimport './App.scss';\n\nexport const goodsFromServer: Goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\ninterface SortParams {\n  sortReverse: boolean;\n  sortField: string;\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortReverse, sortField }: SortParams,\n) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods = preparedGoods.sort((element1, element2) => {\n      switch (sortField) {\n        case SORT_FIELD.LENGTH:\n          return element1.length - element2.length;\n        case SORT_FIELD.NAME:\n          return element1.localeCompare(element2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortReverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<string>('');\n  const [isReverse, setIsReverse] = useState<boolean>(false);\n  const visibleGoods\n  = getPreparedGoods(goodsFromServer, { sortReverse: isReverse, sortField });\n\n  const reset = (): void => {\n    setSortField('');\n    setIsReverse(false);\n  };\n\n  const handleReverseClick = () => {\n    setIsReverse(prev => !prev);\n  };\n\n  const handleSortByLengthClick = () => {\n    setSortField(SORT_FIELD.LENGTH);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-info',\n            { 'is-light': sortField !== SORT_FIELD.NAME },\n          )}\n          onClick={() => setSortField(SORT_FIELD.NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-success',\n            { 'is-light': sortField !== SORT_FIELD.LENGTH },\n          )}\n          onClick={handleSortByLengthClick}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList visibleGoods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}